// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        



// Status type
enum StatusType {
  fresh
  selling
  sold
  expired
  eat
  free
}


model User {
  id String @id @default(uuid())
  name String @db.VarChar(16)
  phone_number String @unique @db.VarChar(10)
  line String? @db.VarChar(16)
  facebook String? @db.VarChar(16)
  instagram String? @db.VarChar(16)
  hashed_password String @db.VarChar(255)
  profile_picture String? @db.VarChar(255)
  latitude Float?
  longitude Float?
  post_code String? @db.VarChar(5)
  fridge Fridge[]
  received_notifications Notification[] @relation("received_notifications")
  sent_notifications Notification[] @relation("sent_notifications")
}

model Fridge {
  id String @id @default(uuid())
  name String @db.VarChar(16)
  amount Int @default(0)
  status StatusType @default(fresh)
  exp_date DateTime
  user_id String
  category String? @db.VarChar(1)
  price Int?
  description String? @db.VarChar(255)
  image String? @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id])
  notification Notification[]

  @@index([user_id])
  @@index([status])
  @@index([exp_date])
  @@index([user_id, status])
}


model Notification {
  id String @id @default(uuid())
  recipientId String
  senderId    String
  fridge_id String
  isRead Boolean @default(false)
  created_at DateTime @default(now())
  recipient User @relation("received_notifications", fields: [recipientId], references: [id])
  sender User @relation("sent_notifications", fields: [senderId], references: [id])
  fridge Fridge @relation(fields: [fridge_id], references: [id])

  @@index([recipientId])
  @@index([senderId])
  @@index([fridge_id])
  @@index([recipientId, fridge_id])
  @@index([recipientId, isRead])
}